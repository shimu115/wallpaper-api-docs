import{_ as s,c as n,a as e,o as l}from"./app-BHtqTjNB.js";const p={};function t(i,a){return l(),n("div",null,[...a[0]||(a[0]=[e(`<h1 id="docker-构建与部署" tabindex="-1"><a class="header-anchor" href="#docker-构建与部署"><span>docker 构建与部署</span></a></h1><h2 id="构建-docker-镜像" tabindex="-1"><a class="header-anchor" href="#构建-docker-镜像"><span>构建 docker 镜像</span></a></h2><p><strong>使用命令</strong></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token function">docker</span> build <span class="token parameter variable">-t</span> wallpaper-api:latest <span class="token builtin class-name">.</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>可以查看下项目中的 application.yml 文件，如果想更改配置，可以再 <code>ENTRYPOINT</code> 这一行加上对应的配置参数 例：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line"># 刷新数据默认为 1 小时刷新一次，若改为每天凌晨 3 点刷新一次可以添加 -Dtask.wallpaper.cron=&quot;0 0 3 */1 * ?&quot;</span>
<span class="line">ENTRYPOINT [&quot;java&quot;, &quot;-Xms256m&quot;, &quot;-Xmx512m&quot;, &quot;-Dtask.wallpaper.cron=\\&quot;0 0 3 */1 * ?\\&quot;&quot;, &quot;-jar&quot;, &quot;/workspace/wallpaper-api.jar&quot;]</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>具体怎么用可以自行搜索</p><h2 id="创建容器" tabindex="-1"><a class="header-anchor" href="#创建容器"><span>创建容器</span></a></h2><p><strong>docker cli 创建容器</strong></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-p</span> <span class="token number">9123</span>:9123 <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">--name</span> wallpaper-api <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">--restart</span><span class="token operator">=</span>unless-stopped <span class="token punctuation">\\</span></span>
<span class="line">  wallpaper-api:latest</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>docker compose 创建容器</strong></p><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml"><pre><code class="language-yaml"><span class="line"><span class="token key atrule">services</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">wallpaper-api</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">image</span><span class="token punctuation">:</span> wallpaper<span class="token punctuation">-</span>api<span class="token punctuation">:</span>latest</span>
<span class="line">    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> wallpaper<span class="token punctuation">-</span>api</span>
<span class="line">    <span class="token key atrule">ports</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> 9123<span class="token punctuation">:</span><span class="token number">9123</span></span>
<span class="line">    <span class="token key atrule">restart</span><span class="token punctuation">:</span> unless<span class="token punctuation">-</span>stopped</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12)])])}const r=s(p,[["render",t]]),o=JSON.parse('{"path":"/deploy/docker.html","title":"docker 构建与部署","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1761132665000,"contributors":[{"name":"shimu","username":"shimu","email":"m13871292203@gmail.com","commits":1,"url":"https://github.com/shimu"}],"changelog":[{"hash":"a140240431a0ba770828a96d802f4b0313666989","time":1761132665000,"email":"m13871292203@gmail.com","author":"shimu","message":"将所有接口的文档全部补全"}]},"filePathRelative":"deploy/docker.md"}');export{r as comp,o as data};
